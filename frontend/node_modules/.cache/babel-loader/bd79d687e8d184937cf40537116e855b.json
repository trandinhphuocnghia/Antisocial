{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mysterious\\\\Antisocial\\\\frontend\\\\src\\\\resources\\\\Pages\\\\Register.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport camera from \"../../public/camera.svg\";\nimport { isEmail, isEmpty, isMatch } from \"../Component/utils/Check/check\";\nimport { ShowErrMsg, ShowSuccessMsg } from \"../Component/utils/notification\"; //set initialState\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  name: '',\n  email: '',\n  password: '',\n  repassword: '',\n  err: '',\n  success: ''\n};\n\nconst Registerpage = () => {\n  _s();\n\n  //hook\n  const [registeruser, setRegisterUser] = useState(initialState);\n  const {\n    name,\n    email,\n    password,\n    repassword,\n    err,\n    success\n  } = registeruser;\n\n  const handleChangeInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setRegisterUser({ ...registeruser,\n      [name]: value,\n      err: '',\n      success: ''\n    });\n  }; //submit (post) to server.\n\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (isEmpty(name) || isEmpty(password)) return setRegisterUser({ ...registeruser,\n      err: \"Please fill in all fields\",\n      success: \"\"\n    });\n    if (!isEmail(email)) return setRegisterUser({ ...registeruser,\n      err: 'Invalid emails',\n      success: ''\n    });\n    if (!isMatch(password, repassword)) return setRegisterUser({ ...registeruser,\n      err: \"Password did not match.\",\n      success: ''\n    });\n\n    try {\n      const res = await axios.post('http://localhost:4000/user/register', {\n        name,\n        email,\n        password\n      });\n      setRegisterUser({ ...registeruser,\n        err: '',\n        success: res.data.msg\n      });\n    } catch (err) {\n      err.response.data.msg && setRegisterUser({ ...registeruser,\n        err: err.response.data.msg,\n        success: ''\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginpage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form2\",\n      children: [err && ShowErrMsg(err), success && ShowSuccessMsg(success), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: 'rgb(252, 245, 245)',\n          marginTop: 10\n        },\n        children: \"Let's to be one of us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: camera,\n          className: \"camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-group\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \" Your user's name\",\n          className: \"inputfiled\",\n          id: \"name\",\n          name: \"name\",\n          value: name,\n          onChange: handleChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Type your Email\",\n          className: \"inputfiled\",\n          id: \"email\",\n          name: \"email\",\n          value: email,\n          onChange: handleChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          className: \"inputfiled\",\n          id: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: handleChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Again Password\",\n          className: \"inputfiled\",\n          id: \"repassword\",\n          name: \"repassword\",\n          value: repassword,\n          onChange: handleChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn\",\n          children: \"REGISTER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Registerpage, \"tp9rL/6crePOOjG8tqK2rsSC0aE=\");\n\n_c = Registerpage;\nexport default Registerpage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registerpage\");","map":{"version":3,"sources":["C:/Users/Mysterious/Antisocial/frontend/src/resources/Pages/Register.tsx"],"names":["axios","useState","isEmail","isEmpty","isMatch","ShowErrMsg","ShowSuccessMsg","initialState","name","email","password","repassword","err","success","Registerpage","registeruser","setRegisterUser","handleChangeInput","e","value","target","handleSubmit","preventDefault","res","post","data","msg","response","color","marginTop","camera"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport camera from \"../../public/camera.svg\"\r\nimport { isEmail, isEmpty, isMatch } from \"../Component/utils/Check/check\";\r\nimport { ShowErrMsg, ShowSuccessMsg } from \"../Component/utils/notification\";\r\n//set initialState\r\nconst initialState = {\r\n    name : '',\r\n    email:'',\r\n    password: '',\r\n    repassword: '',\r\n    err: '',\r\n    success : '',\r\n}\r\n\r\nconst Registerpage = () => {\r\n\r\n    //hook\r\n    const [registeruser,setRegisterUser] = useState(initialState)\r\n\r\n    const {name,email,password,repassword,err,success} = registeruser;\r\n\r\n    const handleChangeInput = (e:any) => {\r\n        const {name,value} = e.target;\r\n        \r\n        setRegisterUser({...registeruser,[name]:value,err:'',success:''})\r\n    }\r\n\r\n    //submit (post) to server.\r\n    const handleSubmit = async (e:any) => {\r\n        e.preventDefault();\r\n\r\n        if(isEmpty(name) || isEmpty(password)) return setRegisterUser({...registeruser,err: \"Please fill in all fields\",success : \"\"})\r\n\r\n        if(!isEmail(email)) return setRegisterUser({...registeruser,err:'Invalid emails',success:''})\r\n        \r\n        if(!isMatch(password,repassword)) return setRegisterUser({...registeruser,err: \"Password did not match.\", success: ''}) \r\n\r\n        try{\r\n            const res = await axios.post('http://localhost:4000/user/register',{\r\n                name,email,password\r\n            })\r\n        \r\n            setRegisterUser({...registeruser,err:'',success:res.data.msg})\r\n\r\n        }catch(err:any){\r\n            err.response.data.msg && setRegisterUser({...registeruser,err:err.response.data.msg,success:''})\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"loginpage\">\r\n            <div className=\"form2\">\r\n                \r\n                {err && ShowErrMsg(err)}\r\n                {success && ShowSuccessMsg(success)}\r\n\r\n                <h2 style={{color:'rgb(252, 245, 245)', marginTop: 10, }}>Let's to be one of us</h2>\r\n\r\n                <div className=\"avatar\">\r\n                    <img src={camera} className=\"camera\"/>\r\n                </div>\r\n                \r\n                <form className =\"form-group\" onSubmit={handleSubmit}>\r\n                <input type = \"text\" placeholder = \" Your user's name\" className = \"inputfiled\" id=\"name\" name=\"name\" value={name} onChange={handleChangeInput} ></input>    \r\n                <input type = \"email\" placeholder = \"Type your Email\" className = \"inputfiled\" id=\"email\" name=\"email\" value={email} onChange={handleChangeInput}></input>\r\n                <input type = \"password\" placeholder = \"Password\" className = \"inputfiled\" id=\"password\" name=\"password\" value={password} onChange={handleChangeInput}></input>\r\n                <input type = \"password\" placeholder = \"Again Password\" className = \"inputfiled\" id=\"repassword\" name=\"repassword\" value={repassword} onChange={handleChangeInput}></input>\r\n\r\n                <button type =\"submit\" className =\"btn\">REGISTER</button>\r\n                </form>\r\n\r\n                \r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Registerpage;"]},"metadata":{},"sourceType":"module"}